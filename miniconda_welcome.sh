#!/bin/bash

# ÂÆö‰πâÈ¢úËâ≤
GREEN='\033[32m'
BLUE='\033[34m'
YELLOW='\033[33m'
CYAN='\033[36m'
MAGENTA='\033[35m'
RESET='\033[0m'
BOLD='\033[1m'

# Ëé∑ÂèñDockerÂÆπÂô®ÂàÜÈÖçÁöÑËµÑÊ∫ê
get_docker_resources() {
    # CPUÊ†∏ÂøÉÊï∞Ëé∑Âèñ
    local cpu_cores=""
    
    # ‰ºòÂÖà‰ªéÁéØÂ¢ÉÂèòÈáèËØªÂèñÔºàÂêØÂä®Êó∂‰º†ÂÖ•Ôºâ
    if [ -n "$CPU_LIMIT" ]; then
        cpu_cores="$CPU_LIMIT"
    # ‰ªéDocker cgroupËØªÂèñCPUÈôêÂà∂
    elif [ -f "/sys/fs/cgroup/cpu/cpu.cfs_quota_us" ] && [ -f "/sys/fs/cgroup/cpu/cpu.cfs_period_us" ]; then
        local quota=$(cat /sys/fs/cgroup/cpu/cpu.cfs_quota_us 2>/dev/null || echo "-1")
        local period=$(cat /sys/fs/cgroup/cpu/cpu.cfs_period_us 2>/dev/null || echo "100000")
        if [ "$quota" -gt 0 ] && [ "$period" -gt 0 ]; then
            cpu_cores=$(echo "scale=1; $quota / $period" | bc 2>/dev/null || echo $((quota / period)))
        fi
    # ‰ªéDocker cgroup v2ËØªÂèñ
    elif [ -f "/sys/fs/cgroup/cpu.max" ]; then
        local cpu_max=$(cat /sys/fs/cgroup/cpu.max 2>/dev/null)
        if [ "$cpu_max" != "max" ] && [ -n "$cpu_max" ]; then
            local quota=$(echo $cpu_max | cut -d' ' -f1)
            local period=$(echo $cpu_max | cut -d' ' -f2)
            if [ "$quota" != "max" ] && [ "$period" -gt 0 ]; then
                cpu_cores=$(echo "scale=1; $quota / $period" | bc 2>/dev/null || echo $((quota / period)))
            fi
        fi
    fi
    
    # ÈªòËÆ§ÂÄº
    CPU_CORES=${cpu_cores:-$(nproc)}
    
    # ÂÜÖÂ≠òÈôêÂà∂Ëé∑Âèñ
    local memory_limit=""
    
    # ‰ºòÂÖà‰ªéÁéØÂ¢ÉÂèòÈáèËØªÂèñ
    if [ -n "$MEMORY_LIMIT" ]; then
        memory_limit="$MEMORY_LIMIT"
    # ‰ªéDocker cgroupËØªÂèñÂÜÖÂ≠òÈôêÂà∂
    elif [ -f "/sys/fs/cgroup/memory/memory.limit_in_bytes" ]; then
        local limit=$(cat /sys/fs/cgroup/memory/memory.limit_in_bytes 2>/dev/null || echo "0")
        # Ê£ÄÊü•ÊòØÂê¶ÊòØÂêàÁêÜÁöÑÈôêÂà∂ÂÄºÔºà‰∏çÊòØÁ≥ªÁªüÊúÄÂ§ßÂÄºÔºâ
        if [ "$limit" -gt 0 ] && [ "$limit" -lt 9223372036854775807 ]; then
            local limit_gb=$((limit / 1024 / 1024 / 1024))
            memory_limit="${limit_gb}G"
        fi
    # ‰ªéDocker cgroup v2ËØªÂèñ
    elif [ -f "/sys/fs/cgroup/memory.max" ]; then
        local limit=$(cat /sys/fs/cgroup/memory.max 2>/dev/null)
        if [ "$limit" != "max" ] && [ -n "$limit" ]; then
            local limit_gb=$((limit / 1024 / 1024 / 1024))
            memory_limit="${limit_gb}G"
        fi
    fi
    
    # ÈªòËÆ§ÂÄº
    ALLOCATED_MEMORY=${memory_limit:-$(free -h | awk 'NR==2{print $2}')}
}

# Ëé∑ÂèñÂÆπÂô®‰ø°ÊÅØ
get_container_info() {
    # Â∞ùËØïËé∑ÂèñÂÆπÂô®ID
    if [ -f "/proc/self/cgroup" ]; then
        CONTAINER_ID=$(cat /proc/self/cgroup | head -1 | sed 's/.*\///' | cut -c1-12 2>/dev/null)
    fi
    
    # Â∞ùËØï‰ªéhostnameËé∑ÂèñÂÆπÂô®Âêç
    CONTAINER_NAME=$(hostname 2>/dev/null)
}

echo -e "${BLUE}============================ WELCOME =================================="
echo -e "${BOLD}${BLUE}                     Ê¨¢ËøéËøõÂÖ•ËÖæ‰∫ëÊô∫ÁÆó‰∫ëÂπ≥Âè∞${RESET}"
echo -e "${BLUE}=========================== WELCOME =================================="
echo -e "${GREEN}"
echo -e "‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ"
echo -e "‚îÇ                                                                     ‚îÇ"
echo -e "‚îÇ                                                                     ‚îÇ"
echo -e "‚îÇ  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó  ‚îÇ"
echo -e "‚îÇ  ‚ïö‚ïê‚ïê‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïë  ‚îÇ"
echo -e "‚îÇ     ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïî‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïë ‚ïö‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïë  ‚îÇ"
echo -e "‚îÇ     ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù  ‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë  ‚ïö‚ñà‚ñà‚ïî‚ïù  ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë  ‚îÇ"
echo -e "‚îÇ     ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë ‚ïö‚ñà‚ñà‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë ‚ïö‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë ‚ïö‚ñà‚ñà‚ñà‚ñà‚ïë  ‚îÇ"
echo -e "‚îÇ     ‚ïö‚ïê‚ïù   ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïù   ‚ïö‚ïê‚ïù    ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïù  ‚îÇ"
echo -e "‚îÇ                                                                     ‚îÇ"
echo -e "‚îÇ                            ${CYAN}tenyunn.com${GREEN}                              ‚îÇ"
echo -e "‚îÇ                      ${MAGENTA}Intelligent Computing Platform${GREEN}                 ‚îÇ"
echo -e "‚îÇ                                                                     ‚îÇ"
echo -e "‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ"

echo -e "${YELLOW}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${RESET}"
echo -e "${BOLD}ÂÆπÂô®‰ø°ÊÅØ:${RESET}"
echo -e "   Áî®Êà∑: ${CYAN}$(whoami)${RESET}"
echo -e "   Êó∂Èó¥: ${CYAN}$(date +"%Y-%m-%d %H:%M:%S")${RESET}"
echo -e "   ‰∏ªÊú∫: ${CYAN}$(hostname)${RESET}"
echo -e "   Á≥ªÁªü: ${CYAN}$(uname -s) $(uname -r)${RESET}"

# Ëé∑ÂèñÂàÜÈÖçÁöÑËµÑÊ∫êÂíåÂÆπÂô®‰ø°ÊÅØ
get_docker_resources
get_container_info

# ÊòæÁ§∫ÂÆπÂô®ÂàÜÈÖçÁöÑËµÑÊ∫ê
echo -e "   CPUÊ†∏ÂøÉ: ${CYAN}${CPU_CORES} cores${RESET}"

# Ëé∑ÂèñÂÜÖÂ≠ò‰ΩøÁî®ÊÉÖÂÜµ
USED_MEM=$(free -h | awk 'NR==2{print $3}')
MEM_USAGE=$(free | awk 'NR==2{printf "%.1f%%", $3*100/$2}')
echo -e "   ÂÜÖÂ≠ò: ${CYAN}${USED_MEM}/${ALLOCATED_MEMORY} (${MEM_USAGE})${RESET}"

# ÊòæÁ§∫ÂÆπÂô®‰ø°ÊÅØ
if [ -n "$CONTAINER_ID" ] && [ "$CONTAINER_ID" != "" ]; then
    echo -e "   ÂÆπÂô®ID: ${CYAN}${CONTAINER_ID}${RESET}"
fi

if [ -n "$TENANT_ID" ]; then
    echo -e "   ÁßüÊà∑ID: ${CYAN}${TENANT_ID}${RESET}"
fi

echo ""
echo -e "${BOLD}Á£ÅÁõò‰ø°ÊÅØ:${RESET}"

# Á≥ªÁªüÁõò‰ø°ÊÅØ
SYS_DISK_INFO=$(df -h / | awk 'NR==2{print $3"/"$2" ("$5")"}')
echo -e "   Á≥ªÁªüÁõò(/): ${CYAN}${SYS_DISK_INFO}${RESET}"

# Êï∞ÊçÆÁõò‰ø°ÊÅØ
if [ -d "/datadisk" ]; then
    DATA_DISK_INFO=$(df -h /datadisk | awk 'NR==2{print $3"/"$2" ("$5")"}')
    echo -e "   Êï∞ÊçÆÁõò(/datadisk): ${CYAN}${DATA_DISK_INFO}${RESET}"
fi

# Ëé∑ÂèñGPU‰ø°ÊÅØ
if command -v nvidia-smi &> /dev/null; then
    echo ""
    echo -e "${BOLD}GPU‰ø°ÊÅØ:${RESET}"
    
    # Ëé∑ÂèñCUDAÁâàÊú¨
    CUDA_VERSION=$(nvidia-smi | grep -oP "CUDA Version: \K[0-9.]+" | head -1)
    echo -e "   CUDAÁâàÊú¨: ${MAGENTA}${CUDA_VERSION}${RESET}"
    
    # Ëé∑ÂèñGPUÊï∞ÈáèÂíåÂûãÂè∑
    GPU_COUNT=$(nvidia-smi -L | wc -l)
    # Ëé∑ÂèñÁ¨¨‰∏Ä‰∏™GPUÁöÑÂûãÂè∑‰Ωú‰∏∫‰ª£Ë°®
    GPU_MODEL=$(nvidia-smi -L | head -1 | sed 's/GPU [0-9]*: //' | sed 's/ (UUID:.*//')
    
    echo -e "   GPUÊï∞Èáè: ${MAGENTA}${GPU_COUNT}${RESET}"
    echo -e "   GPUÂûãÂè∑: ${GREEN}${GPU_MODEL}${RESET}"
else
    echo ""
    echo -e "${BOLD}GPU‰ø°ÊÅØ:${RESET}"
    echo -e "   ‚ùå Êú™Ê£ÄÊµãÂà∞NVIDIA GPU"
fi

echo -e "${YELLOW}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${RESET}"

echo -e "${BOLD}${CYAN}üêç PythonÁéØÂ¢ÉËØ¥Êòé:${RESET}"
echo -e "${YELLOW}  ‚Ä¢ ÂΩìÂâç‰ΩøÁî®ÂéüÊúâPythonÁéØÂ¢ÉÔºàÂåÖÂê´torchÁ≠âÔºâ${RESET}"
echo -e "${YELLOW}  ‚Ä¢ CondaÂ∑•ÂÖ∑Â∑≤ÂÆâË£Ö‰ΩÜbaseÁéØÂ¢ÉÊú™Ëá™Âä®ÊøÄÊ¥ª${RESET}"
echo -e "${YELLOW}  ‚Ä¢ ÂéüÂõ†: ÊøÄÊ¥ªbase‰ºö‰∏¢Â§±Âü∫Á°ÄÈïúÂÉè‰∏≠ÁöÑÈ¢ÑË£ÖÂåÖ${RESET}"
echo -e "${YELLOW}  ‚Ä¢ Â¶ÇÈúÄconda: ÊâãÂä®ÊâßË°å 'conda activate base'${RESET}"
echo -e "${YELLOW}  ‚Ä¢ Êé®Ëçê: ‰∏∫ÂÆûÈ™åÈ°πÁõÆÂàõÂª∫Áã¨Á´ãÁéØÂ¢É 'conda create -n myproject'${RESET}"

echo -e "${GREEN}=====================================================${RESET}"
echo -e "${BOLD}${CYAN}‚ö†Ô∏è  Ê≥®ÊÑè‰∫ãÈ°π:${RESET}"
echo -e "${YELLOW}  ‚Ä¢ ÂΩìÂâçÂÆπÂô®ËµÑÊ∫êÈôêÂà∂: CPU=${CPU_CORES}Ê†∏, ÂÜÖÂ≠ò=${ALLOCATED_MEMORY}${RESET}"
echo -e "${YELLOW}  ‚Ä¢ ÈïøÊó∂Èó¥ËÆ≠ÁªÉÂª∫ËÆÆ‰ΩøÁî® screen Êàñ tmux${RESET}"
echo -e "${YELLOW}  ‚Ä¢ ÁõëÊéßGPU‰ΩøÁî®ÊÉÖÂÜµ: nvidia-smi${RESET}"
echo -e "${GREEN}=====================================================${RESET}"
echo -e "${BOLD}${CYAN}üí° ÊäÄÊúØÊîØÊåÅ:${RESET}"
echo -e "${YELLOW}  ‚Ä¢ ÊñáÊ°£ËØ¥Êòé: ${CYAN}ËØ∑ËÆøÈóÆ -> https://docs.tenyunn.com${RESET}"
echo -e "${YELLOW}  ‚Ä¢ Êèê‰∫§ÂèçÈ¶à: ${CYAN}ËØ∑ÁôªÂΩï -> https://cloud.tenyunn.com Êèê‰∫§Â∑•Âçï${RESET}"
echo -e "${GREEN}=====================================================${RESET}"